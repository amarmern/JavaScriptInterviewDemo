// function Animal(name) {
//   this.name = name;
// }

// Animal.prototype.bark = function () {
//   console.log(this.name, "can bark");
// };

// function Dog(...args) {
//   Animal.apply(this,args);
// }

// Dog.prototype = Object.create(Animal.prototype);

// let dog1 = new Dog("Dog1");
// dog1.bark();

function Animal(name) {
  this.name = name;
}

Animal.prototype.walk = function () {
  console.log(this.name, "is Walking");
};
Animal.prototype.bark = function () {
  console.log(this.name, " is barking");
};
function Dog(...name) {
  Animal.apply(this, name);
}

Dog.prototype = Object.create(Animal.prototype);

var bruno = new Dog("Bruno");
bruno.walk(); // Bruno is walking // Animal
bruno.bark(); // Bruno is barking // Dog

let myobj = {
  title: "hello",
  sayTitle: function () {
    setTimeout(() => {
      console.log(this.title);
    }, 0);
  }
};
myobj.sayTitle();

class AnimalClass {
  constructor(name) {
    this.name = name;
  }
  walk() {
    console.log(this.name, this.color, "can walk");
  }
  bark() {
    console.log(this.name, this.color, "can bark");
  }
}

class DogClass extends AnimalClass {
  constructor(name, color) {
    super(name);
    this.color = color;
  }
}

let brunoo = new DogClass("Broon", "red-color");
let broon = new DogClass("Broon", "brown-color");
brunoo.walk();
broon.bark();
